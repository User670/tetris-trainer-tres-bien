/*----------------------------------------------------------------------------------------
 ☆★ オブジェクト: 問題 100 ～ 199 ★☆
----------------------------------------------------------------------------------------*/
function Problem200(id){
  this.id = id;
  switch(id){
  case 100:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [I, S, Z, O, J, T];
    this.caption = 'TSD openers, part 1';
    this.hint = 'This is TKI - a very important TSD opener setup. It is used by players of various skill levels.';
    this.isStrictGuide = true;
    this.guides = [G(0, 3, 18), G(0, 4, 17), G(3, 2, 17), 
                   G(0, -1, 18), G(3, 8, 17), G(2, 6, 17)];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 101:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [I, Z, S, O, L, T];
    this.caption = 'TSD openers, part 2';
    this.hint = 'Try this opener mirrored.\nBy the way, the first 7 pieces of a game are one each of the 7 pieces without duplicates.';
    this.isStrictGuide = true;
    this.guides = [G(0, 3, 18), G(0, 3, 17), G(1, 5, 17), 
                   G(0, 7, 18), G(1, -1, 17), G(2, 1, 17)];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 102:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [I, S, J, O, Z, T, L, Z, S, L, O, I, T];
    this.caption = 'TSD openers, part 3';
    this.hint = '... Same goes with the 7 pieces after the first 7, and the 7 after that, and so on. This is what we call the 7-bag randomizer.';
    this.isStrictGuide = true;
    this.guides = [G(0, 3, 18), G(0, 4, 17), G(3, 8, 17),
                   G(0, -1, 18), G(3, 2, 17), G(2, 6, 17),
                   G(2, 4, 17), G(1, 7, 17), G(0, 4, 16),
                   G(1, 0, 17), G(0, 1, 17), G(3, -1, 16),
                   G(2, 6, 16)];
    this.req = [0,0,0,0,0,0,0,0,2,0,0,0,0];
    break;

  case 103:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [I, S, Z, O, J, T];
    this.caption = 'TSD openers, part 4';
    this.hint = 'Time to launch the TSD opener yourself.\nThings should be more smooth if you practice enough...';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 104:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [I, Z, J, L, O, T];
    this.caption = 'Variations of TSD openers, part 1';
    this.hint = 'Slightly different shape, but the I piece is still on the bottom middle.';
    this.isStrictGuide = true;
    this.guides = [G(0, 3, 18), G(1, 4, 16), G(3, 8, 17), G(2, 2, 17), G(0, -1, 18),
                   G(2, 6, 17)];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 105:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [I, L, S, O, J, T];
    this.caption = 'Variations of TSD openers, part 2';
    this.hint = 'The same setup mirrored.\nHaving the I piece in the middle makes it easier to get many TSDs.';
    this.isStrictGuide = true;
    this.guides = [G(0, 3, 18), G(1, -1, 17), G(3, 3, 16), G(0, 7, 18), G(2, 5, 17),
                   G(2, 1, 17)];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 106:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [J, L, Z, S, I, O, T, L, J, I, O, S, T, T];
    this.caption = 'DT Cannon';
    this.hint = 'DT stands for Double Triple because it\'s a TSD -> TST cannon.\nIt\'s a bit complex, so you don\'t need to memorize it for now.';
    this.isStrictGuide = true;
    this.guides = [G(0, 7, 18), G(0, 3, 18), G(0, 7, 17),
                   G(0, 3, 17), G(1, 4, 16), G(0, -1, 18),
                   G(0, 3, 15), G(3, 2, 13), G(1, -1, 15),
                   G(1, 7, 14), G(0, 6, 15), G(0, 5, 14),
                   G(2, 1, 16), G(3, 1, 17)];
    this.req = [0,0,0,0,0,0,0,0,1,1,0,0,0];
    break;

  case 107:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [Z, S, T, L, J, I, O, Z, L, S, T];
    this.caption = 'C-Spin';
    this.hint = 'A TST setup that can be followed up by either a TD or a TST.\nThis setup is known as C-spin. However, in Japan, this is called TKI stacking because this was invented by TKI (not to be confused with TKI, the opener made by TKI).\n';
    this.isStrictGuide = true;
    this.guides = [G(0, 2, 18), G(1, 3, 17), G(2, 2, 15),
                   G(1, -1, 17), G(1, -1, 14), G(0, 6, 18),
                   G(0, 7, 17), G(0, 5, 17), G(2, 7, 15),
                   G(0, 5, 15), G(1, 0, 16)];
    this.req = [0,0,0,0,0,0,0,0,0,1,0,0,0];
    break;

  case 108:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [S, T, Z, I, L, J, O, T, I, O];
    this.caption = 'Perfect Clear opener';
    this.hint = 'With the first 7 pieces, you can also make a setup known as the Perfect Clear Opener (PCO).';
    this.isStrictGuide = true;
    this.guides = [G(0, 1, 18), G(1, -1, 17), G(0, 0, 16), G(0, 6, 18), G(1, 5, 16),
                   G(3, 8, 16), G(0, 6, 16), G(3, 4, 17), G(0, 2, 16), G(0, 2, 18)];
    this.req = [0,0,0,0,0,0,0,0,0,0,1,0,0];
    break;
	
  case 109:	
	this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [J, L, O, S, Z, I, T, O, J, I, I, S, Z, O, L, J, T, I, J ,L];
    this.caption = 'Grace System';
    this.hint = 'A different Perfect Clear opener that builds a 4x6 rectangle, named Grace system.\nIf you can get a T piece in hold, you can get a higher Perfect Clear chance than PCO.';
    this.isStrictGuide = true;
    this.guides = [G(0, 0, 18), G(0, 3, 18), G(0, 1, 17), G(3, 0, 16), G(3, 4, 16),
                   G(0, 1, 15), G(3, 8, 17), G(0, 5, 18), G(2, 6, 17), G(0, 6, 18),
				   G(0, 5, 18), G(3, 8, 17), G(3, 4, 17), G(0, 5, 17), G(2, 4, 15),
                   G(2, 7, 15), G(0, 0, 18), G(1, 1, 16), G(2, 0, 17), G(2, 0, 17)];
    this.req = [0,0,0,0,0,0,0,0,0,0,2,0,0];
    break;

  case 110:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,1,0]];
    this.ingredients = [J, S, L, Z];
    this.caption = '2-wide gap skimming, part 1';
    this.hint = 'Other than S and Z, you can also use J and L to skim down a well like this.';
    this.isStrictGuide = true;
    this.guides = [G(1, -1, 13), G(3, 0, 13), 
                   G(3, 8, 17), G(1, 7, 17)];
    this.req = [0,4,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 111:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1]];
    this.ingredients = [T, J, T, L, J, L];
    this.caption = '2-wide gap skimming, part 2';
    this.hint = 'Combine T with J/L to skim down this one. Keep an eye on which direction you drop your pieces.';
    this.isStrictGuide = true;
    this.guides = [G(3, 8, 9), G(1, 7, 9), G(1, 3, 13),
                   G(3, 4, 13), G(1, -1, 17), G(3, 0, 17)];
    this.req = [0,0,3,0,0,0,0,0,0,0,0,0,0];
    break;

  case 112:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1]];
    this.ingredients = [Z, J, L];
    this.caption = '2-wide gap skimming, part 3';
    this.hint = 'The Z would seemingly make a mess at a glance, but you can still clean it up.';
    this.isStrictGuide = true;
    this.guides = [G(3, 0, 17), G(1, -1, 16), G(3, 0, 17)];
    this.req = [0,0,1,0,0,0,0,0,0,0,0,0,0];
    break;

  case 113:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1]];
    this.ingredients = [T, I, J, I, L, I];
    this.caption = 'Terraforming the well, part 1';
    this.hint = 'T, J and L can be used to adjust the height of the floor of the 2-wide well. Here we do this to make it Tetris-ready.';
    this.isStrictGuide = true;
    this.guides = [G(3, 8, 5), G(1, 6, 6), G(3, 4, 10), 
                   G(3, 3, 11), G(3, 0, 15), G(3, -1, 16)];
    this.req = [0,0,0,3,0,0,0,0,0,0,0,0,0];
    break;

  case 114:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,0,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [0,0,0,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1]];
    this.ingredients = [S, I, Z, I, T, I];
    this.caption = 'Terraforming the well, part 2';
    this.hint = 'Shrink the top of the opening while skimming down by one.';
    this.isStrictGuide = true;
    this.guides = [G(0, 7, 5), G(3, 6, 6), G(0, 3, 10), 
                   G(1, 3, 11), G(2, 0, 14), G(3, -1, 16)];
    this.req = [0,0,0,3,0,0,0,0,0,0,0,0,0];
    break;


  case 115:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,1,1,1,1,1,1,1],
                          [0,1,0,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0]];
    this.ingredients = [J, I, L, I];
    this.caption = 'Terraforming the well, part 3';
    this.hint = 'Skim by hooking on the J/L.';
    this.isStrictGuide = true;
    this.guides = [G(2, 0, 9), G(3, -1, 11),
                   G(2, 7, 14), G(1, 7, 16)];
    this.req = [0,0,0,2,0,0,0,0,0,0,0,0,0];
    break;

  case 116:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1]];
    this.ingredients = [T, J, I, T, L, I];
    this.caption = 'Blocking the well, part 1';
    this.hint = 'While the T would indeed block the well, you can still get a clean well if a J or L comes right after.';
    this.isStrictGuide = true;
    this.guides = [G(3, 8, 6), G(1, 7, 6), G(1, 7, 8),
                   G(1, -1, 14), G(3, 0, 14), G(3, -1, 16)];
    this.req = [0,0,0,2,0,0,0,0,0,0,0,0,0];
    break;

  case 117:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0]];
    this.ingredients = [L, S, S, L, Z, J];
    this.caption = 'Blocking the well, part ';
    this.hint = 'If you can clean it up right away, you might as well block it for a bit.';
    this.isStrictGuide = true;
    this.guides = [G(1, 6, 10), G(1, 7, 10), G(0, 7, 10),
                   G(2, 7, 8), G(1, 7, 8), G(1, 6, 8)];
    this.req = [0,3,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 118:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0],
                          [1,1,1,1,1,1,1,0,1,0],
                          [1,1,1,1,1,1,1,1,1,0]];
    this.ingredients = [O, I];
    this.caption = 'Purposefully leaving a hole in the stack';
    this.hint = 'Sometimes you can justify leaving a hole in the stack by clearing a split Double or Triple afterwards.';
    this.isStrictGuide = true;
    this.guides = [G(0, 6, 16), G(1, 7, 16)];
    this.req = [0,0,1,0,0,0,0,0,0,0,0,0,0];
    break;

  case 119:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,0,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1]];
    this.ingredients = [S, T, L, J, O, Z, I];
    this.caption = 'To sum up...';
    this.hint = 'Use what you\'ve learned so far to clear everything here.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,0,0,0,0,0,0,0,1,0,0];
    break;

  case 120:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1]];
    this.ingredients = [T, I];
    this.caption = 'Digging while not blocking, part 1';
    this.hint = 'Dig, and then clear a Tetris.\nGetting the T in a wrong direction will cause the Tetris well to be blocked.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 121:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1]];
    this.ingredients = [S, Z, I];
    this.caption = 'Digging while not blocking, part 2';
    this.hint = 'Dig, and then clear a Tetris.\nIt\'s not always a good idea to use the first piece you get.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 122:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1]];
    this.ingredients = [S, Z, I];
    this.caption = 'Digging while not blocking, part 3';
    this.hint = 'By the way, if you place as indicated, you would be preparing for a T-Spin too.\nWe\'ll cover forecasting in a later part.';
    this.isStrictGuide = true;
    this.guides = [G(3, 2, 5), G(1, 7, 6), G(3, 6, 9)];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 123:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1]];
    this.ingredients = [S, T, I];
    this.caption = 'Digging while not blocking, part 4';
    this.hint = 'Dig and clear a Tetris.\nThink about avoiding blocking the well as you dig.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 124:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1]];
    this.ingredients = [O, T, Z, J, I];
    this.caption = 'Digging while not blocking, part 5';
    this.hint = 'Dig and clear a Tetris.\nThe O at the beginning is annoying, and it can be very painful later on if you just haphazardly place it somewhere random.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 125:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,0,0,0,0,0,1,1],
                          [1,0,0,1,0,0,0,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1]];
    this.ingredients = [J, T, Z, I];
    this.caption = 'Digging while not blocking, part 6';
    this.hint = 'Dig and clear a Tetris.\nTo be good at multiplayer, you should also learn to deal with your opponent\'s attack.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 126:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1]];
    this.ingredients = [L, T, O, S, I];
    this.caption = 'Digging while not blocking, part 7';
    this.hint = 'Dig and clear a Tetris.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 127:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1]];
    this.ingredients = [L, T, S, I];
    this.caption = 'Skimming and digging';
    this.hint = 'Dig and clear a Tetris.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 128:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,1,0,0,0,1],
                          [1,1,0,0,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1]];
    this.ingredients = [J, Z, O, I, I];
    this.caption = 'Digging and offsetting, part 1';
    this.hint = 'If you are at a disadvantage in combat, you should focus on cancelling/offsetting incoming garbage, instead of sending attack.';
    this.isStrictGuide = true;
    this.guides = [G(0, 6, 3), G(3, 3, 3), G(0, -1, 3), 
                   G(1, 0, 4), G(1, 6, 16)];
    this.req = [0,0,0,2,0,0,0,0,0,0,0,0,0];
    break;

  case 129:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,0,0,0,0,0,0,0],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1]];
    this.ingredients = [Z, L, J, T, S, I];
    this.caption = 'Digging and offsetting, part 2';
    this.hint = 'Get used to it, prepare Tetrises and T-Spins, and wait for opponent to send their garbage.';
    this.isStrictGuide = true;
    this.guides = [G(0, 3, 4), G(1, 5, 3), G(3, 8, 3),
                   G(2, 1, 4), G(3, 7, 5), G(1, 0, 8)];
    this.req = [0,0,0,1,0,0,0,0,1,0,0,0,0];
    break;

  case 130:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,1,1,1,1,1,1,0,0],
                          [0,0,0,1,1,1,1,0,0,0]];
    this.ingredients = [J, L];
    this.caption = 'Sliding in the J and L, part 1';
    this.hint = 'Kinda like sliding a T for a Mini T-Spin.\nAt the indicated position, rotate left for J (blue) and right for L (orange).';
    this.isStrictGuide = false;
    this.guides = [G(1, -1, 17), G(3, 8, 17)];
    this.req = [1,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 131:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,1,1,0,0,1,1,0,0],
                          [1,0,0,0,1,1,0,0,0,1]];
    this.ingredients = [J, L];
    this.caption = 'Sliding in the J and L, part 2';
    this.hint = 'Same idea as before. It also works with a terrain like this.\nRotate left for J, right for L.';
    this.isStrictGuide = false;
    this.guides = [G(1, 0, 17), G(3, 7, 17)];
    this.req = [1,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 132:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,1,0,0,1,0,0,0],
                          [1,0,0,0,1,1,0,0,0,1],
                          [1,0,1,0,1,1,0,1,0,1]];
    this.ingredients = [J, L];
    this.caption = 'Slotting in the J and L, part 1';
    this.hint = 'At the indicated position, rotate right for J, left for L.';
    this.isStrictGuide = false;
    this.guides = [G(1, 0, 17), G(3, 7, 17)];
    this.req = [1,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 133:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,1,1,1,0,0,1,1,1,0],
                          [0,0,0,1,1,1,1,0,0,0],
                          [1,1,0,1,1,1,1,0,1,1]];
    this.ingredients = [J, L];
    this.caption = 'Slotting in the J and L, part 2';
    this.hint = 'At the indicated location, rotate right for J, left for L.';
    this.isStrictGuide = false;
    this.guides = [G(1, -1, 16), G(3, 8, 16)];
    this.req = [0,1,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 134:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,0,0,1,1],
                          [1,0,0,0,1,1,0,0,0,1],
                          [1,1,1,0,1,1,0,1,1,1]];
    this.ingredients = [J, L];
    this.caption = 'Slamming in the J and L, part 1';
    this.hint = 'At the indicated position, rotate left for J, right for L.';
    this.isStrictGuide = false;
    this.guides = [G(3, 2, 16), G(1, 5, 16)];
    this.req = [0,1,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 135:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,1,1,0,0,0,0,1,1,0],
                          [1,0,0,0,0,0,0,0,0,1],
                          [1,1,1,0,1,1,0,1,1,1]];
    this.ingredients = [J, L];
    this.caption = 'Slamming in the J and L, part 2';
    this.hint = 'At the indicated position, rotate left for J, right for L.\nIt\'s the same type of twist despite looking different.';
    this.isStrictGuide = false;
    this.guides = [G(3, 2, 16), G(1, 5, 16)];
    this.req = [1,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 136:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,0,0,0,0],
                          [1,0,0,0,1,0,1,0,0,1],
                          [1,0,0,0,1,1,1,1,1,1],
                          [1,1,1,1,1,0,1,0,0,0],
                          [1,1,1,1,1,1,1,0,0,0]];
    this.ingredients = [J, L];
    this.caption = 'Reverse sliding in the J and L';
    this.hint = 'At the indicated position, rotate right for J, left for L.\nUseful for fixing a bad stack.';
    this.isStrictGuide = false;
    this.guides = [G(3, 2, 15), G(1, 6, 17)];
    this.req = [2,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 137:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,0,0,0,1,1,1,1],
                          [1,0,1,0,0,0,1,0,1,1],
                          [1,0,0,0,0,0,0,0,1,1]];
    this.ingredients = [J, L, Z, T];
    this.caption = 'Plugging in the J and L';
    this.hint = 'At the indicated position, rotate right for J, left for L.\nWhile we are at it, might as well practice a T-Spin Double.';
    this.isStrictGuide = false;
    this.guides = [G(3, 2, 17), G(1, 4, 17)];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 138:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,1,1,0,0,1,1,0,0],
                          [0,0,0,1,0,0,1,0,0,0],
                          [1,1,0,1,1,1,1,0,1,1],
                          [1,1,0,1,1,1,1,0,1,1],
                          [1,0,0,1,1,1,1,0,0,1]];
    this.ingredients = [J, L];
    this.caption = 'TST-style J/L-Spin Triple, part 1';
    this.hint = 'This one works similar to a T-Spin Triple.';
    this.isStrictGuide = true;
    this.guides = [G(3, 1, 17), G(1, 6, 17)];
    this.req = [0,0,1,0,0,0,0,0,0,0,0,0,0];
    break;

  case 139:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,1,1,0,0,0],
                          [0,0,0,1,1,1,0,0,0,0],
                          [0,0,0,0,1,1,0,0,0,0],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,0,0,1,1,1,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,0,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,0,1]];
    this.ingredients = [J, L, J, L];
    this.caption = 'TST-style J/L-Spin Triple, part 2';
    this.hint = 'Unlike T, a L/J spin like this also works if the overhang is one tile higher or further.';
    this.isStrictGuide = true;
    this.guides = [G(3, 2, 8), G(1, 5, 11), G(3, 1, 14), G(1, 6, 17)];
    this.req = [0,0,4,0,0,0,0,0,0,0,0,0,0];
    break;

  case 140:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1]];
    this.ingredients = [S];
    this.caption = 'Spinning S, without walls';
    this.hint = 'Rotate the S (green) RIGHT once to make it vertical, and RIGHT again at the indicated position.\nI repeat, rotate RIGHT for both rotations.';
    this.isStrictGuide = false;
    this.guides = [G(1, 3, 16)];
    this.req = [0,1,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 141:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,1,1,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1]];
    this.ingredients = [Z];
    this.caption = 'Spinning Z, without walls';
    this.hint = 'For Z (red), rotate LEFT to get it vertical, and LEFT to spin it in.';
    this.isStrictGuide = false;
    this.guides = [G(3, 3, 16)];
    this.req = [0,1,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 142:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,1,1,1,1,0,0,1,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,1,0,0,1,1,1,1,1,1],
                          [1,1,1,1,1,1,0,0,1,1],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,0,0,1,1,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1]];
    this.ingredients = [S, S, Z, Z, S, Z];
    this.caption = 'Practice: S/Z spin without walls';
    this.hint = 'Do it a few times, get your muscle memory for which direction you need to rotate.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,6,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 143:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,0,0,1,1,1,1,1,1]];
    this.ingredients = [S];
    this.caption = 'Spinning S, with walls';
    this.hint = 'This time, rotate LEFT to get it vertical, and LEFT again at the indicated position.\nThe wall made the rotation direction opposite.';
    this.isStrictGuide = false;
    this.guides = [G(3, 3, 16)];
    this.req = [0,1,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 144:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,1,0,0,1,1,1]];
    this.ingredients = [Z];
    this.caption = 'Spinning Z, with walls';
    this.hint = 'Similarly, opposite from the wall-less situation, rotate RIGHT to get it vertical and RIGHT to spin it in.';
    this.isStrictGuide = false;
    this.guides = [G(1, 3, 16)];
    this.req = [0,1,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 145:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,1,1,0,0,1,1],
                          [1,1,0,0,1,1,0,0,1,1],
                          [1,1,0,0,1,1,0,0,1,1],
                          [1,1,0,0,1,1,0,0,1,1],
                          [1,0,0,1,1,1,1,0,0,1],
                          [1,0,0,1,1,1,1,0,0,1],
                          [1,0,0,1,1,1,1,0,0,1],
                          [1,0,0,1,1,1,1,0,0,1]];
    this.ingredients = [S, Z, S, Z, S, Z, S, Z];
    this.caption = 'Practice: S/Z spin with walls';
    this.hint = 'It\'s used quite often, so get it memorized well.\nPS. That last pair of pieces may or may not be different...';
    this.isStrictGuide = true;
    this.guides = [G(2, 1, 14), G(2, 6, 14), G(2, 1, 15), G(2, 6, 15),
                   G(2, 1, 16), G(2, 6, 16), G(2, 1, 17), G(2, 6, 17)];
    this.req = [0,4,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 146:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,1,1,0,0,1,1],
                          [1,1,0,0,1,1,0,0,1,1],
                          [1,0,0,0,1,1,0,0,0,1]];
    this.ingredients = [S, Z];
    this.caption = 'Sliding in the S/Z';
    this.hint = 'Here it works if you rotate left then left, and also works if you rotate right then right.';
    this.isStrictGuide = true;
    this.guides = [G(2, 1, 17), G(2, 6, 17)];
    this.req = [1,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 147:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,1,0,0,1,0,0,0],
                          [1,0,1,1,1,1,1,1,0,1],
                          [1,0,0,1,1,1,1,0,0,1],
                          [1,1,0,1,1,1,1,0,1,1]];
    this.ingredients = [S, Z];
    this.caption = 'The no-overhang S/Z-Spin Triple, part 1';
    this.hint = 'Hard to believe it at first glance, but rotate left for S and right for Z at the indicated position can just get them in.';
    this.isStrictGuide = false;
    this.guides = [G(0, 1, 15), G(0, 6, 15)];
    this.req = [0,0,1,0,0,0,0,0,0,0,0,0,0];
    break;

  case 148:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,0,0,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1]];
    this.ingredients = [I, S, L, Z];
    this.caption = 'The no-overhang S/Z-Spin Triple, part 2';
    this.hint = 'While this doesn\'t require an overhang, it does call for a block as a pivot. (They call it a "pillow" in Chinese.)';
    this.isStrictGuide = true;
    this.guides = [G(0, 6, 12), G(3, 4, 14), G(1, -1, 14), G(1, 1, 17)];
    this.req = [0,0,2,0,0,0,0,0,0,0,0,0,0];
    break;

  case 149:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,1,1],
                          [0,1,1,0,0,0,0,0,0,1],
                          [0,1,0,0,0,0,0,0,0,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,0,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,1,1]];
    this.ingredients = [S, S, Z];
    this.caption = 'S/Z-Spin Triple with overhang';
    this.hint = 'T-Spin Triple-style. The overhang can be one block further or one block higher.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,3,0,0,0,0,0,0,0,0,0,0];
    break;

  case 150:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,1,1,0,0,0],
                          [1,1,1,1,1,1,0,0,0,0]];
    this.ingredients = [I];
    this.caption = 'Spinning the I piece, part 1';
    this.hint = 'Rotate LEFT first, then LEFT at the indicated position.';
    this.isStrictGuide = false;
    this.guides = [G(3, 8, 16)];
    this.req = [1,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 151:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,1,1,0,0,0,0,0],
                          [0,0,0,0,1,1,1,1,1,1]];
    this.ingredients = [I];
    this.caption = 'Spinning the I piece, part 2';
    this.hint = 'The opposite side, rotate RIGHT first, then RIGHT at the indicated position.';
    this.isStrictGuide = false;
    this.guides = [G(1, -2, 16)];
    this.req = [1,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 152:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,0,0,0,0,1,1,1],
                          [1,1,0,0,0,0,0,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1]];
    this.ingredients = [I];
    this.caption = 'Spinning the I piece, part 3';
    this.hint = 'Don\'t rotate, drop it to the indicated position, then rotate RIGHT.';
    this.isStrictGuide = false;
    this.guides = [G(0, 2, 15)];
    this.req = [0,0,1,0,0,0,0,0,0,0,0,0,0];
    break;

  case 153:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,0,0,0,0,1,1,1],
                          [1,1,1,0,0,0,0,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1]];
    this.ingredients = [I];
    this.caption = 'Spinning the I piece, part 4';
    this.hint = 'However, if you want to get it in the oppoiste side, you need to flip the I piece over (rotate twice) first. Then rotate LEFT at the indicated position.';
    this.isStrictGuide = false;
    this.guides = [G(2, 4, 14)];
    this.req = [0,0,1,0,0,0,0,0,0,0,0,0,0];
    break;

  case 154:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],

			  [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,0,0,0,0,0,1],
                          [1,1,1,0,0,0,0,0,0,1],
                          [1,1,1,0,1,0,0,0,0,1],
                          [1,1,1,0,1,1,1,0,1,1],
                          [1,1,1,0,1,1,1,1,1,1]];
    this.ingredients = [I];
    this.caption = 'Spinning the I piece, part 5';
    this.hint = 'This also works even if the terrain is bumpy.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [1,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 155:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,1,1,1,1],
                          [0,0,0,0,0,0,0,0,1,1],
                          [0,0,0,0,0,0,0,1,1,1],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1]];
    this.ingredients = [T];
    this.caption = '"Neo" T-Spin';
    this.hint = 'Rotate right at the indicated position, and it will teleport down and be a (Mini) T-Spin Double.\n(You have to rotate it; just putting it there won\'t work.)';
    this.isStrictGuide = false;
    this.guides = [G(2, 5, 15)];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 156:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,1,1,1,1],
                          [0,0,0,0,0,0,0,0,1,1],
                          [0,0,0,0,0,0,0,0,1,1],
                          [1,1,1,1,1,1,0,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1]];
    this.ingredients = [T];
    this.caption = '"Fin" T-Spin';
    this.hint = 'Rotate right at the indicated position also makes it a T-Spin Double.\n(If you failed the timing for the rotation, you can still get the piece out and try again.)';
    this.isStrictGuide = false;
    this.guides = [G(2, 5, 15)];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 157:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,1,1,1,1,1],
                          [0,0,0,0,0,0,0,0,1,1],
                          [0,0,0,0,0,0,0,1,1,1],
                          [1,1,1,1,1,1,0,0,1,1],
                          [1,1,1,1,1,1,0,1,1,1]];
    this.ingredients = [T];
    this.caption = '"Iso" T-Spin';
    this.hint = 'This time rotate left at the indicated position.\nThe original Japanese author of this game thought this was impressive.';
    this.isStrictGuide = false;
    this.guides = [G(2, 5, 15)];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 158:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1]];
    this.ingredients = [L, J, T];
    this.caption = 'Building the Fin, part 1';
    this.hint = 'Here let\'s try building a setup for a Fin.\nSadly, it\'s not very useful for combat.';
    this.isStrictGuide = true;
    this.guides = [G(0, 7, 16), G(2, 5, 14), G(3, 5, 17)];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 159:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,1],
                          [1,0,0,0,0,0,0,0,0,1],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1]];
    this.ingredients = [O, I, T, S, Z, T];
    this.caption = 'Building the Fin, part 2';
    this.hint = 'After the Fin, build and clear a regular T-Spin Double.';
    this.isStrictGuide = true;
    this.guides = [G(0, 6, 16), G(0, 4, 14), G(3, 5, 17),
                   G(0, 4, 18), G(0, 0, 18), G(2, 2, 17)];
    this.req = [0,0,0,0,0,0,0,0,2,0,0,0,0];
    break;

  case 160:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,1,0,0,0,0,0],
                          [0,0,0,1,1,0,1,0,0,0],
                          [0,1,1,1,1,0,1,1,1,0],
                          [1,1,1,1,1,0,1,1,1,1]];
    this.ingredients = [J, S, L, Z, I];
    this.caption = 'Handing wrong-order pieces, part 1';
    this.hint = 'While you would normally place a S/Z before J/L here, you can do the reverse if pieces come in the wrong order.';
    this.isStrictGuide = true;
    this.guides = [G(1, -1, 16), G(2, 1, 15), G(3, 8, 16), G(2, 6, 15), G(1, 3, 16)];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 161:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,0,1,1,0,0,0],
                          [1,1,1,1,0,1,1,0,0,0],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1]];
    this.ingredients = [Z, L, I];
    this.caption = 'Handing wrong-order pieces, part 2';
    this.hint = 'Similarly, here the Z comes before L, and you can do this to solve it.';
    this.isStrictGuide = true;
    this.guides = [G(0, 6, 15), G(0, 7, 16), G(3, 3, 16)];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 162:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,1,1,1,1,0],
                          [0,0,0,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0]];
    this.ingredients = [I, J, I];
    this.caption = 'Handing wrong-order pieces, part 3';
    this.hint = 'Just so that you know, all these spin moves we\'re doing are powered by something called the Super Rotation System (SRS).';
    this.isStrictGuide = true;
    this.guides = [G(0, 1, 15), G(0, 0, 16), G(1, 7, 16)];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 163:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,0,0,1,1,0,1,1],
                          [1,1,0,0,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1]];
    this.ingredients = [J, Z, I];
    this.caption = 'Handing wrong-order pieces, part 4';
    this.hint = 'Only if I can pull this off in real time combat situation... says the person who wrote this thing in the first place.';
    this.isStrictGuide = true;
    this.guides = [G(3, 3, 14), G(2, 1, 15)];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 164:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,1,1,0,1,1,1,1],
                          [0,0,1,1,1,0,1,1,1,1],
                          [0,0,0,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1]];
    this.ingredients = [J, T, I];
    this.caption = 'Application of the slide, part 1';
    this.hint = 'Sliding in pieces is useful when you want to fill in a tiny overhang like this.';
    this.isStrictGuide = true;
    this.guides = [G(0, 0, 17), G(2, 0, 15), G(1, 3, 16)];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 165:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,0,0,0,0,0,0,0],
                          [1,1,1,0,0,0,1,1,0,0],
                          [1,1,0,0,0,0,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1]];
    this.ingredients = [Z];
    this.caption = 'Application of the slide, part 2';
    this.hint = 'Reminder: right then right, left then left, both work.';
    this.isStrictGuide = true;
    this.guides = [G(2, 2, 17)];
    this.req = [1,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 166:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,0,0,0,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1]];
    this.ingredients = [L, I];
    this.caption = 'Application of the slide, part 3';
    this.hint = 'No T piece but we\'re near topping out!\nGuess better off give up the T-Spin and dig instead.';
    this.isStrictGuide = true;
    this.guides = [G(0, 3, 3), G(3, 3, 4)];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 167:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,0,0,0,0],
                          [1,1,1,0,0,0,0,0,0,0],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,0,0,1,1,1,1,1,1]];
    this.ingredients = [O, S];
    this.caption = 'Walls for the spins, part 1';
    this.hint = 'Put the O (yellow) there as a wall.\nWithout a wall there, the S can\'t go in.';
    this.isStrictGuide = true;
    this.guides = [G(0, 4, 16), G(2, 2, 17)];
    this.req = [0,1,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 168:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,0,0,1,1],
                          [1,1,0,1,1,1,1,1,1,1]];
    this.ingredients = [J, L];
    this.caption = 'Walls for the spins, part 2';
    this.hint = 'If there is a gap that is tricky to fill in, try seeing if any of the SRS twists will get things in.';
    this.isStrictGuide = true;
    this.guides = [G(0, 5, 17), G(2, 2, 17)];
    this.req = [0,1,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 169:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,1,1],
                          [0,0,0,0,0,0,1,1,1,1],
                          [1,0,0,0,0,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,0,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1]];
    this.ingredients = [J, Z];
    this.caption = 'Filling in the hole';
    this.hint = 'TST-style rotations, or the no-overhang S/Z Triple rotation, are useful for filling in holes.';
    this.isStrictGuide = true;
    this.guides = [G(0, 1, 15), G(2, 3, 17)];
    this.req = [1,0,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 170:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,0,0,0,0],
                          [1,1,0,0,1,1,1,1,1,1],
                          [1,0,0,0,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1]];
    this.ingredients = [L, I];
    this.caption = 'Applying SRS, part 1';
    this.hint = 'Clear a Tetris.\nEven out the stack with what you\'ve learned.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 171:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,0,0,0,0],
                          [1,1,1,0,0,0,0,0,0,0],
                          [1,1,0,0,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1]];
    this.ingredients = [S, I];
    this.caption = 'Applying SRS, part 2';
    this.hint = 'Clear a Tetris.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 172:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,0,0,1,0],
                          [1,1,0,1,0,0,0,1,1,1],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,0,0,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1]];
    this.ingredients = [T, I];
    this.caption = 'Applying SRS, part 3';
    this.hint = 'Clear a Tetris.\nWhile we haven\'t seen this particular thing with the T, it\'s still quite straight forward.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 173:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,1,1,1,1,0,0],
                          [0,0,0,0,0,1,1,1,0,1],
                          [0,1,0,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1]];
    this.ingredients = [Z, L, I];
    this.caption = 'Applying SRS, part 4';
    this.hint = 'Clear a Tetris.\nRemember that thing with the L?';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 174:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,1,1],
                          [1,1,0,1,0,0,0,0,0,1],
                          [1,1,0,1,1,0,0,1,0,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1]];
    this.ingredients = [J, Z, I];
    this.caption = 'Applying SRS, part 5';
    this.hint = 'Clear a Tetris.\nDo make sure to practice your SRS twists.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 175:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,1,1,0,1,0,0,0,0,0],
                          [0,1,1,1,1,1,0,0,0,0],
                          [0,1,1,1,1,1,1,0,0,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1]];
    this.ingredients = [O, S, I];
    this.caption = 'Applying SRS, part 6';
    this.hint = 'Clear a Tetris.\nFill in the gaps as you plan ahead your piece placements.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 176:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,1,0],
                          [1,0,0,0,0,0,0,0,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1]];
    this.ingredients = [L, Z, I];
    this.caption = 'Applying SRS, part 7';
    this.hint = 'Clear a Tetris.\nHint: clear a Triple with a Z.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 177:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,1,1,0,0],
                          [0,0,0,1,0,0,0,1,1,0],
                          [0,1,1,1,1,1,0,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0]];
    this.ingredients = [J, S, J, I];
    this.caption = 'Applying SRS, part 8';
    this.hint = 'Clear a Tetris.\nFeel free to take your time and try a few times; after all it\'s still practice.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 178:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,1,1,0,1],
                          [1,1,0,0,0,0,0,1,1,1],
                          [1,1,0,1,1,1,0,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1]];
    this.ingredients = [O, T, S, I];
    this.caption = 'Applying SRS, part 9';
    this.hint = 'Clear a Tetris.\nHint: do the no-overhang Triple spin with the S.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 179:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,0,0,0,0,1,1,0],
                          [1,1,0,0,0,0,0,0,1,0],
                          [1,1,1,1,1,1,1,0,1,0],
                          [1,1,1,1,1,1,1,1,1,0],
                          [1,1,1,1,1,1,1,1,1,0]];
    this.ingredients = [T, Z, J, I];
    this.caption = 'Applying SRS, part 10';
    this.hint = 'Clear a Tetris.\nHint: for the T, rotate left then hard drop.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 180:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,0,0,0,1],
                          [1,1,0,0,0,0,1,0,0,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1]];
    this.ingredients = [J, O, Z, T];
    this.caption = 'Mid-term quiz, part 1';
    this.hint = 'Clear a T-Spin Double.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 181:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,1,1,1,1,1,1],
                          [1,1,0,0,0,1,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1]];
    this.ingredients = [O, T, O, T];
    this.caption = 'Mid-term quiz, part 2';
    this.hint = 'Clear a Mini T-Spin Single twice.\n You\'ll need the O pieces to make sure the T registers a Spin.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,0,0,0,2,0,0,0,0,0,0];
    break;

  case 182:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,1,1,1,1],
                          [1,1,0,0,0,1,1,1,1,1],
                          [1,1,0,1,0,1,1,1,1,1]];
    this.ingredients = [J, L, O, T];
    this.caption = 'Mid-term quiz, part 3';
    this.hint = 'Clear a T-Spin Triple.\nWhile you don\'t have to do a TST in this situation in real combat, know that it\s always on your list of possible things to do.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,0,0,0,0,0,0,1,0,0,0];
    break;

  case 183:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,1,1],
                          [0,1,1,1,0,1,0,0,0,1],
                          [0,0,0,1,0,1,0,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1]];
    this.ingredients = [J, L, I];
    this.caption = 'Mid-term quiz, part 4';
    this.hint = 'Clear a Tetris.\nRemember the twists.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 184:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,1,1,0,0,0,0,0,0],
                          [0,0,1,1,0,0,0,0,0,0],
                          [0,0,1,1,0,1,0,0,1,1],
                          [1,0,0,1,0,1,1,0,0,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1]];
    this.ingredients = [Z, Z, I];
    this.caption = 'Mid-term quiz, part 5';
    this.hint = 'Clear a Tetris.\nS- and Z-Spins are quite common in real games, make sure to remember them well.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 185:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,1,1,0,0,0],
                          [0,0,0,0,0,1,0,0,0,0],
                          [0,0,0,1,0,1,1,1,1,1],
                          [0,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1]];
    this.ingredients = [I, J, S, I];
    this.caption = 'Mid-term quiz, part 6';
    this.hint = 'Clear a Tetris.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;

  case 186:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1],
                          [0,1,1,1,1,1,1,1,1,1]];
    this.ingredients = [T, L, Z, S, I, I];
    this.caption = 'Mid-term quiz, part 7';
    this.hint = 'Clear a Tetris in the (blocked-off) well on the bottom left.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,1,1,0,0,0,0,0,0,0,0,0];
    break;

  case 187:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,0,0,0,1,1],
                          [1,1,1,1,0,0,0,0,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1]];
    this.ingredients = [O, J, Z];
    this.caption = 'Mid-term quiz, part 8';
    this.hint = 'Clear a Z-Spin Triple.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,1,0,0,0,0,0,0,0,0,0,0];
    break;

  case 188:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,0,0,0,0,0,0,0],
                          [1,1,0,0,0,0,0,0,1,1],
                          [1,1,0,1,0,0,0,0,1,1],
                          [1,1,1,1,1,0,0,0,1,1],
                          [1,1,1,1,1,0,1,1,1,1]];
    this.ingredients = [L, J, T];
    this.caption = 'Mid-term quiz, part 9';
    this.hint = 'Clear a T-Spin Double.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,0,0,0,0,0,1,0,0,0,0];
    break;

  case 189:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0]];
    this.ingredients = [S, T, L, J, Z, O, I, S, L, Z];
    this.caption = 'Mid-term quiz, part 10';
    this.hint = 'Get a Perfect Clear. Follow the guide for the first 7 pieces.';
    this.isStrictGuide = true;
    this.guides = [G(0, 1, 18), G(1, -1, 17), G(1, 5, 17), G(3, 8, 17), G(0, 0, 16), G(0, 6, 17), G(0, 6, 15)];
    this.req = [0,0,0,0,0,0,0,0,0,0,1,0,0];
    break;

  case 190:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,1,0,0,1,1,1,1,1],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,1,0,0,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [1,1,1,1,0,0,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [0,0,1,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,1,0,0],
                          [1,1,1,1,1,1,1,1,0,0]];
    this.ingredients = [O, O, O, O, O, O, O, O, O];
    this.caption = 'Before learning Finesse';
    this.hint = 'Try to quickly figure out how much sideways movement you need.\nThe core idea of finesse is to quickly place pieces with the fewest possible button presses.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,9,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 191:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1]];
    this.ingredients = [O, O, O, O, O, O, O, O];
    this.caption = 'Finesse with the O';
    this.hint = 'DAS (i.e. hold a direction) to the wall, then tap the opposite direction to move back one block.\nWhile this game will give you the pass even if you don\'t do proper finesse, please still try to practice the technique.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,8,0,0,0,0,0,0,0,0,0,0,0];
    break;

  case 192:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1],
                          [1,1,1,1,0,1,1,1,1,1]];
    this.ingredients = [I, I, I, I];
    this.caption = 'Finesse with the I, part 1';
    this.hint = 'No horizontal movement needed for this one. Rotate either right or left.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,4,0,0,0,0,0,0,0,0,0];
    break;

  case 193:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,1,1,1,0,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1],
                          [1,1,1,0,1,1,1,1,1,1]];
    this.ingredients = [I, I, I, I];
    this.caption = 'Finesse with the I, part 2';
    this.hint = 'For these placements, "rotate right/left + tap right left once" is the optimal way to move.\nKeeping button presses at a minimum helps reduce misdrops.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,4,0,0,0,0,0,0,0,0,0];
    break;

  case 194:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1]];
    this.ingredients = [I, I, I, I];
    this.caption = 'Finesse with the I, part 3';
    this.hint = 'DAS to the right wall, RELEASE right, and rotate right. Or the left version for the other side.\nIt might take a different amount of time to get the piece all the way to the wall, depending on the game and/or its settings.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,4,0,0,0,0,0,0,0,0,0];
    break;

  case 195:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,1,1,1,1,1,0,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1]];
    this.ingredients = [I, I, I, I];
    this.caption = 'Finesse with the I, part 4';
    this.hint = 'DAS right, rotate left.\nDAS left, rotate right.\nAh so complicated';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,0,4,0,0,0,0,0,0,0,0,0];
    break;

  case 196:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1]];
    this.ingredients = [T, T, I, T, T, I];
    this.caption = 'Finesse with the T, part 1';
    this.hint = 'For T, DAS to the left, release left, rotate right, and it\'s perfectly one block from the wall; vice versa on the other side.';
    this.isStrictGuide = true;
    this.guides = [G(1, 0, 11), G(1, 0, 9), G(1, 0, 10),
                   G(3, 7, 17), G(3, 7, 15), G(3, 6, 16)];
    this.req = [0,0,0,2,0,0,0,0,0,0,0,0,0];
    break;

  case 197:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,0,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,0,0,0,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1],
                          [1,0,0,0,1,1,1,1,1,1],
                          [1,1,0,1,1,1,1,1,1,1]];
    this.ingredients = [T, T, T];
    this.caption = 'Finesse with the T, part 2';
    this.hint = 'Like last time, DAS left, rotate right.\nSoft drop to indicated position, rotate right, and you have a T-Spin Double.';
    this.isStrictGuide = false;
    this.guides = [G(1, 0, 12), G(1, 0, 14), G(1, 0, 16)];
    this.req = [0,0,0,0,0,0,0,0,3,0,0,0,0];
    break;

  case 198:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,0,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,0,1,1,1,1,1,1,1,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,0,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1],
                          [1,1,1,1,1,1,1,1,0,1]];
    this.ingredients = [J, J, J, L, L, L];
    this.caption = 'Finesse with J/L, part 1';
    this.hint = 'DAS left, rotate right; vice versa on the other side.\nSimilar to what we did with the T.';
    this.isStrictGuide = false;
    this.guides = [];
    this.req = [0,0,6,0,0,0,0,0,0,0,0,0,0];
    break;

  case 199:
    this.initialBlocks = [[0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [0,0,0,0,0,0,0,0,0,0],
                          [1,0,0,0,0,0,0,0,0,1],
                          [1,0,0,0,0,0,0,0,0,1],
                          [1,0,0,1,1,0,1,0,0,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1],
                          [1,1,1,1,1,0,1,1,1,1]];
    this.ingredients = [J, L, I];
    this.caption = 'Finesse with J/L, part 2';
    this.hint = 'DAS right, rotate left, vice versa on the other side.\nShould be easy to understand if you realize the piece rotates around the middle block of the 3-long part.';
    this.isStrictGuide = true;
    this.guides = [G(3, 7, 14), G(1, 0, 14), G(1, 3, 16)];
    this.req = [0,0,0,1,0,0,0,0,0,0,0,0,0];
    break;
  }
  return this;
}
